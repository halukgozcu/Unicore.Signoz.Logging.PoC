version: '3.8'

services:
  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"' || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 30

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - elk-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found' || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 30

  # Logstash
  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    container_name: logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./logstash/config:/usr/share/logstash/config
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044" # TCP input (e.g., for Beats or other sources)
      - "8080:8080" # HTTP input (e.g., for OTLP/HTTP if routed here)
      - "9600:9600" # Monitoring API
    environment:
      - LS_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - elk-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I http://localhost:9600 | grep -q '200' || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.92.0
    container_name: otel-collector
    command: ["--config=/etc/otel-config.yaml"]
    volumes:
      - ./otel-collector/config.yaml:/etc/otel-config.yaml
    ports:
      - "5317:5317"   # OTLP gRPC
      - "5318:5318"   # OTLP HTTP
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter endpoint
      - "9411:9411"   # Zipkin (if Zipkin receiver enabled)
    depends_on:
      # Collector sends logs/traces directly to Elasticsearch
      elasticsearch:
        condition: service_healthy
      # Logstash dependency kept in case metrics pipeline is changed later
      logstash:
        condition: service_healthy
    networks:
      - elk-network
    restart: on-failure

networks:
  elk-network:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local